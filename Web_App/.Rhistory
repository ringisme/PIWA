header = TRUE)
m1 <- 8
d1 <- 20
v1 <- "TEMP"
left.y <- 1969
for(i in seq(1:ncol(D.data))){
if(names(D.data)[i] == v1){
Vnum <- i
}
}
rm(i)
Mon.D.data <- subset(x = D.data,
month(mdy(WX_DATE)) == m1 &
year(mdy(WX_DATE)) < 2011
)
Mon.var <- unique(day(mdy(Mon.D.data$WX_DATE)))
Mon.var <- as.data.frame(Mon.var)
names(Mon.var) <- "Day"
View(Mon.var)
View(Mon.D.data)
?select
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
install.packages("dplyr")
library(dplyr)
?select
rm(list=ls())
library(ggplot2)
library(lubridate)
library(sqldf) # Allow me to use SQL syntax.
library(scales) # For percentage number.
library(gridExtra) # For combine two plots together.
library(plyr)
library(dplyr) # For advanced data filtering.
library(shinythemes) # For more beautiful themes.
library(Cairo) # For beautiful plots.
library(plotly) # For creasting pie chart
setwd("C:/Users/yfan95/OneDrive - The University of Western Ontario/UWO/MRP/FireData/V2.0/Cores")   # Win Path
D.data <- read.csv("../data/DRY_Weather.csv",
sep = ",",
header = TRUE)
F.data <- read.csv("../data/DRY_Fires.csv",
sep = ",",
header = TRUE)
m1 <- 8
d1 <- 20
v1 <- "TEMP"
View(D.data)
select(names(D.data), matches(v1))
names(D.data)
filter(names(D.data), x == v1)
v1
filter(names(D.data), v1)
filter(names(D.data), x %in% c(v1))
?grepl()
names(D.data)
class(names(D.data))
names(D.data)[v1]
for(i in seq(1:ncol(D.data))){
if(names(D.data)[i] == v1){
Vnum <- i
}
}
rm(i)
Mon.D.data <- subset(x = D.data,
month(mdy(WX_DATE)) == m1 &
year(mdy(WX_DATE)) < 2011
)
Mon.var <- unique(day(mdy(Mon.D.data$WX_DATE)))
Mon.var <- as.data.frame(Mon.var)
names(Mon.var) <- "Day"
View(Mon.var)
rm(Mon.var)
View(Mon.D.data)
Mon.D.data %>%
select(WX_DATE, Vnum)
Mon.D.data %>%
select(WX_DATE, Vnum) %>%
group_by(day(mdy(Mon.D.data$WX_DATE)))
Mon.D.data %>%
select(WX_DATE, Vnum) %>%
group_by(day(mdy(Mon.D.data$WX_DATE))) %>%
summarise(Ave = mean(paste(v1)))
paste(v1)
Mon.D.data %>%
select(WX_DATE, Vnum) %>%
group_by(day(mdy(Mon.D.data$WX_DATE))) %>%
summarise(Ave = mean(paste(v1)))
Mon.D.data %>%
select(WX_DATE, Vnum) %>%
group_by(day(mdy(Mon.D.data$WX_DATE)))
Mon.D.data %>%
select(WX_DATE, Vnum) %>%
group_by(day(mdy(Mon.D.data$WX_DATE))) %>%
summarise(Ave = mean(TEMP))
Mon.D.data %>%
select(WX_DATE, Vnum) %>%
group_by(day(mdy(Mon.D.data$WX_DATE))) %>%
summarise(Ave = mean(v1))
Mon.D.data %>%
select(WX_DATE, Vnum) %>%
group_by(day(mdy(Mon.D.data$WX_DATE))) %>%
summarise(Ave = mean(TEMP))
class(paste(v1))
paste(v1)
Mon.D.data %>%
select(WX_DATE, Vnum) %>%
group_by(day(mdy(Mon.D.data$WX_DATE))) %>%
summarise(Ave = mean(paste(v1)))
Mon.D.data %>%
select(WX_DATE, Vnum) %>%
group_by(day(mdy(Mon.D.data$WX_DATE))) %>%
summarise(Ave = mean(as.character(v1)))
Mon.D.data %>%
select(WX_DATE, Vnum) %>%
group_by(day(mdy(Mon.D.data$WX_DATE))) %>%
summarise(Ave = mean(TEMP))
Mon.D.data %>%
select(WX_DATE, Vnum) %>%
group_by(day(mdy(Mon.D.data$WX_DATE))) %>%
summarise(Ave = mean([2]))
Mon.D.data %>%
select(WX_DATE, Vnum) %>%
group_by(day(mdy(Mon.D.data$WX_DATE)))
Mon.D.data %>%
select(WX_DATE, Vnum) %>%
group_by(day(mdy(Mon.D.data$WX_DATE))) %>%
summarise(Ave = mean(TEMP))
Mon.D.data %>%
select(WX_DATE, Vnum) %>%
group_by(day(mdy(Mon.D.data$WX_DATE))) %>%
summarise(Ave = mean(TEMP)) -> d1
View(d1)
class(d1)
Mon.D.data %>%
select(WX_DATE, Vnum) %>%
group_by(day(mdy(Mon.D.data$WX_DATE))) %>%
summarise(Ave = mean(TEMP)) %>% as.data.frame() -> d1
class(d1)
class(d1)
d1
Mon.D.data %>%
select(WX_DATE, Vnum) %>%
group_by(day(mdy(Mon.D.data$WX_DATE))) %>%
summarise(Ave = mean(TEMP)) %>% as.data.frame() -> Mon.var %>%
names()[1] <- c("Day")
Mon.D.data %>%
select(WX_DATE, Vnum) %>%
group_by(day(mdy(Mon.D.data$WX_DATE))) %>%
summarise(Ave = mean(TEMP)) %>% as.data.frame() -> Mon.var
names(Mon.var)[1] <- c("Day")
View(Mon.var)
Mon.D.data %>%
select(WX_DATE, Vnum) %>%
group_by(day(mdy(Mon.D.data$WX_DATE))) %>%
summarise(Ave = mean(v1))
warnings
paste(v1)
v1
Mon.D.data %>%
select(WX_DATE, Vnum) %>%
group_by(day(mdy(Mon.D.data$WX_DATE)))
Mon.D.data %>%
select(WX_DATE, Vnum) %>%
group_by(day(mdy(Mon.D.data$WX_DATE))) %>%
summarise(Ave = mean(TEMP))
Mon.D.data %>%
select(WX_DATE, Vnum) %>%
group_by(day(mdy(Mon.D.data$WX_DATE))) %>%
summarise(Ave = mean(v1))
Mon.D.data %>%
select(WX_DATE, Vnum) %>%
group_by(day(mdy(Mon.D.data$WX_DATE))) %>%
summarise(Ave = mean(2))
Mon.D.data %>%
select(WX_DATE, Vnum) %>%
group_by(day(mdy(Mon.D.data$WX_DATE))) %>% as.data.frame() -> c2
names(c2)
Mon.D.data %>%
select(WX_DATE, Vnum)
Mon.D.data %>%
select(WX_DATE, c2 = Vnum)
Mon.D.data %>%
select(WX_DATE, c2 = Vnum) %>%
group_by(day(mdy(Mon.D.data$WX_DATE))) %>%
summarise(Ave = mean(c2))
Mon.D.data %>%
select(WX_DATE, c2 = Vnum) %>%
group_by(day(mdy(Mon.D.data$WX_DATE))) %>%
summarise(Ave = mean(c2)) %>% as.data.frame() -> Mon.var
Mon.D.data %>%
select(WX_DATE, c2 = Vnum) %>%
group_by(day(mdy(Mon.D.data$WX_DATE))) %>%
summarise(Ave = mean(c2)) %>% as.data.frame() -> Mon.var
names(Mon.var)[1] <- c("Day")
M.V1.ratio <- quantile(Mon.var[,2],
probs = c(0, 0.1, 0.25, 0.5, 0.75, 0.9, 1),
na.rm=TRUE)
Mon.var <<- Mon.var
rm(list=ls())
setwd("C:/Users/yfan95/OneDrive - The University of Western Ontario/UWO/MRP/FireData/V2.0")
shiny::runApp("Web_App")
Mon.var <<- Mon.var
p.mr <<- ggplot(data = Mon.var,
mapping = aes(x=Day, y=Average)) +
geom_point(fill="black", size =3, colour = "blue") +
geom_hline(yintercept = M.V1.ratio[-4], colour = "gray", size =1, lty=2)+
geom_hline(yintercept = mean(Mon.var$Average, na.rm=TRUE), colour = "green", size = 1, lty = 2) +
# Titles and axes
labs(title = paste("Monthly", v1, "Report of", month(m1, label = TRUE, abbr = FALSE))) +
theme(plot.title = element_text(hjust = 0.5)) +
ylab(paste("Average", v1)) +
scale_x_continuous(breaks=seq(1,31,1)) +
# Line chart
geom_line(size = 0.7) +
# Add Lesso lines
geom_smooth(method = loess, se=FALSE, colour = "skyblue")
rm(list=ls())
library(ggplot2)
library(lubridate)
library(sqldf) # Allow me to use SQL syntax.
library(scales) # For percentage number.
library(gridExtra) # For combine two plots together.
library(plyr)
library(dplyr) # For advanced data filtering.
library(shinythemes) # For more beautiful themes.
library(Cairo) # For beautiful plots.
library(plotly) # For creasting pie chart
setwd("C:/Users/yfan95/OneDrive - The University of Western Ontario/UWO/MRP/FireData/V2.0/Cores")   # Win Path
D.data <- read.csv("../data/DRY_Weather.csv",
sep = ",",
header = TRUE)
F.data <- read.csv("../data/DRY_Fires.csv",
sep = ",",
header = TRUE)
m1 <- 8
d1 <- 20
v1 <- "TEMP"
for(i in seq(1:ncol(D.data))){
if(names(D.data)[i] == v1){
Vnum <- i
}
}
rm(i)
#########################
#     Data Analysis     #
#########################
# ===== Monthly Report =====
# Data Selection fot Monthly Report:
Mon.D.data <- subset(x = D.data,
month(mdy(WX_DATE)) == m1 &
year(mdy(WX_DATE)) < 2011
)
# Trying to build a new dataframe which only
# contains Years and the mean of indicator for each day on this month.
Mon.D.data %>%
select(WX_DATE, c2 = Vnum) %>%
group_by(day(mdy(Mon.D.data$WX_DATE))) %>%
summarise(Ave = mean(c2)) %>% as.data.frame() -> Mon.var
names(Mon.var)[1] <- c("Day")
M.V1.ratio <- quantile(Mon.var[,2],
probs = c(0, 0.1, 0.25, 0.5, 0.75, 0.9, 1),
na.rm=TRUE)
Mon.var <<- Mon.var
#########################
#     visualization     #
#########################
# ===== For Monthly Report =================
# ==========================================
p.mr <<- ggplot(data = Mon.var,
mapping = aes(x=Day, y=Average)) +
geom_point(fill="black", size =3, colour = "blue") +
geom_hline(yintercept = M.V1.ratio[-4], colour = "gray", size =1, lty=2)+
geom_hline(yintercept = mean(Mon.var$Average, na.rm=TRUE), colour = "green", size = 1, lty = 2) +
# Titles and axes
labs(title = paste("Monthly", v1, "Report of", month(m1, label = TRUE, abbr = FALSE))) +
theme(plot.title = element_text(hjust = 0.5)) +
ylab(paste("Average", v1)) +
scale_x_continuous(breaks=seq(1,31,1)) +
# Line chart
geom_line(size = 0.7) +
# Add Lesso lines
geom_smooth(method = loess, se=FALSE, colour = "skyblue")
rm(list=ls())
library(ggplot2)
library(lubridate)
library(sqldf) # Allow me to use SQL syntax.
library(scales) # For percentage number.
library(gridExtra) # For combine two plots together.
library(plyr)
library(dplyr) # For advanced data filtering.
library(shinythemes) # For more beautiful themes.
library(Cairo) # For beautiful plots.
library(plotly) # For creasting pie chart
setwd("C:/Users/yfan95/OneDrive - The University of Western Ontario/UWO/MRP/FireData/V2.0/Cores")   # Win Path
D.data <- read.csv("../data/DRY_Weather.csv",
sep = ",",
header = TRUE)
F.data <- read.csv("../data/DRY_Fires.csv",
sep = ",",
header = TRUE)
m1 <- 8
d1 <- 20
v1 <- "TEMP"
for(i in seq(1:ncol(D.data))){
if(names(D.data)[i] == v1){
Vnum <- i
}
}
rm(i)
Mon.D.data <- subset(x = D.data,
month(mdy(WX_DATE)) == m1 &
year(mdy(WX_DATE)) < 2011
)
Mon.D.data %>%
select(WX_DATE, c2 = Vnum) %>%
group_by(day(mdy(Mon.D.data$WX_DATE))) %>%
summarise(Ave = mean(c2)) %>% as.data.frame() -> Mon.var
names(Mon.var)[1] <- c("Day")
M.V1.ratio <- quantile(Mon.var[,2],
probs = c(0, 0.1, 0.25, 0.5, 0.75, 0.9, 1),
na.rm=TRUE)
View(Mon.var)
Mon.D.data %>%
select(WX_DATE, c2 = Vnum) %>%
group_by(day(mdy(Mon.D.data$WX_DATE))) %>%
summarise(Average = mean(c2)) %>% as.data.frame() -> Mon.var
names(Mon.var)[1] <- c("Day")
M.V1.ratio <- quantile(Mon.var[,2],
probs = c(0, 0.1, 0.25, 0.5, 0.75, 0.9, 1),
na.rm=TRUE)
p.mr <<- ggplot(data = Mon.var,
mapping = aes(x=Day, y=Average)) +
geom_point(fill="black", size =3, colour = "blue") +
geom_hline(yintercept = M.V1.ratio[-4], colour = "gray", size =1, lty=2)+
geom_hline(yintercept = mean(Mon.var$Average, na.rm=TRUE), colour = "green", size = 1, lty = 2) +
# Titles and axes
labs(title = paste("Monthly", v1, "Report of", month(m1, label = TRUE, abbr = FALSE))) +
theme(plot.title = element_text(hjust = 0.5)) +
ylab(paste("Average", v1)) +
scale_x_continuous(breaks=seq(1,31,1)) +
# Line chart
geom_line(size = 0.7) +
# Add Lesso lines
geom_smooth(method = loess, se=FALSE, colour = "skyblue")
p.mr
rm(list=ls())
library(ggplot2)
library(lubridate)
library(sqldf) # Allow me to use SQL syntax.
library(scales) # For percentage number.
library(gridExtra) # For combine two plots together.
library(plyr)
library(dplyr) # For advanced data filtering.
library(shinythemes) # For more beautiful themes.
library(Cairo) # For beautiful plots.
library(plotly) # For creasting pie chart
setwd("C:/Users/yfan95/OneDrive - The University of Western Ontario/UWO/MRP/FireData/V2.0/Cores")   # Win Path
D.data <- read.csv("../data/DRY_Weather.csv",
sep = ",",
header = TRUE)
F.data <- read.csv("../data/DRY_Fires.csv",
sep = ",",
header = TRUE)
m1 <- 8
d1 <- 20
v1 <- "BUI"
left.y <- 1969
for(i in seq(1:ncol(D.data))){
if(names(D.data)[i] == v1){
Vnum <- i
}
}
rm(i)
#########################
#     Data Analysis     #
#########################
# ===== Monthly Report =====
# Data Selection fot Monthly Report:
Mon.D.data <- subset(x = D.data,
month(mdy(WX_DATE)) == m1 &
year(mdy(WX_DATE)) < 2011
)
# Trying to build a new dataframe which only
# contains Years and the mean of indicator for each day on this month.
Mon.D.data %>%
select(WX_DATE, c2 = Vnum) %>%
group_by(day(mdy(Mon.D.data$WX_DATE))) %>%
summarise(Average = mean(c2)) %>% as.data.frame() -> Mon.var
names(Mon.var)[1] <- c("Day")
M.V1.ratio <- quantile(Mon.var[,2],
probs = c(0, 0.1, 0.25, 0.5, 0.75, 0.9, 1),
na.rm=TRUE)
Mon.var <<- Mon.var
#########################
#     visualization     #
#########################
# ===== For Monthly Report =================
# ==========================================
p.mr <<- ggplot(data = Mon.var,
mapping = aes(x=Day, y=Average)) +
geom_point(fill="black", size =3, colour = "blue") +
geom_hline(yintercept = M.V1.ratio[-4], colour = "gray", size =1, lty=2)+
geom_hline(yintercept = mean(Mon.var$Average, na.rm=TRUE), colour = "green", size = 1, lty = 2) +
# Titles and axes
labs(title = paste("Monthly", v1, "Report of", month(m1, label = TRUE, abbr = FALSE))) +
theme(plot.title = element_text(hjust = 0.5)) +
ylab(paste("Average", v1)) +
scale_x_continuous(breaks=seq(1,31,1)) +
# Line chart
geom_line(size = 0.7) +
# Add Lesso lines
geom_smooth(method = loess, se=FALSE, colour = "skyblue")
p.mr
?which()
names(D.data)
which(names(D.data) == v1)
rm(list=ls())
# install.packages("ggplot2")
# install.packages("lubridate")
# install.packages("knitr")
library(ggplot2)
library(lubridate)
library(sqldf) # Allow me to use SQL syntax.
library(scales) # For percentage number.
library(gridExtra) # For combine two plots together.
library(plyr)
library(dplyr) # For advanced data filtering.
library(shinythemes) # For more beautiful themes.
library(Cairo) # For beautiful plots.
library(plotly) # For creasting pie chart
### Set local path
# setwd("/Users/fan/OneDrive - The University of Western Ontario/UWO/MRP/FireData/V2.0/Cores")   # Mac Path
setwd("C:/Users/yfan95/OneDrive - The University of Western Ontario/UWO/MRP/FireData/V2.0/Cores")   # Win Path
D.data <- read.csv("../data/DRY_Weather.csv",
sep = ",",
header = TRUE)
F.data <- read.csv("../data/DRY_Fires.csv",
sep = ",",
header = TRUE)
# ======================================
##################                     =
#  Which year?  #                      =
##################                     =
# y1 <- 2014
##################                     =
#  Which month?  #                     =
##################                     =
m1 <- 8
##################                     =
#   Which day?   #                     =
##################                     =
d1 <- 20
##################                     =
#   Which var?   #                     =
##################                     =
v1 <- "BUI"
# ======================================
Vnum <- which(names(D.data) == v1)
#########################
#     Data Analysis     #
#########################
# ===== Monthly Report =====
# Data Selection fot Monthly Report:
Mon.D.data <- subset(x = D.data,
month(mdy(WX_DATE)) == m1 &
year(mdy(WX_DATE)) < 2011
)
# Trying to build a new dataframe which only
# contains Years and the mean of indicator for each day on this month.
Mon.D.data %>%
select(WX_DATE, c2 = Vnum) %>%
group_by(day(mdy(Mon.D.data$WX_DATE))) %>%
summarise(Average = mean(c2)) %>% as.data.frame() -> Mon.var
names(Mon.var)[1] <- c("Day")
M.V1.ratio <- quantile(Mon.var[,2],
probs = c(0, 0.1, 0.25, 0.5, 0.75, 0.9, 1),
na.rm=TRUE)
Mon.var <<- Mon.var
#########################
#     visualization     #
#########################
# ===== For Monthly Report =================
# ==========================================
p.mr <<- ggplot(data = Mon.var,
mapping = aes(x=Day, y=Average)) +
geom_point(fill="black", size =3, colour = "blue") +
geom_hline(yintercept = M.V1.ratio[-4], colour = "gray", size =1, lty=2)+
geom_hline(yintercept = mean(Mon.var$Average, na.rm=TRUE), colour = "green", size = 1, lty = 2) +
# Titles and axes
labs(title = paste("Monthly", v1, "Report of", month(m1, label = TRUE, abbr = FALSE))) +
theme(plot.title = element_text(hjust = 0.5)) +
ylab(paste("Average", v1)) +
scale_x_continuous(breaks=seq(1,31,1)) +
# Line chart
geom_line(size = 0.7) +
# Add Lesso lines
geom_smooth(method = loess, se=FALSE, colour = "skyblue")
p.mr
rm(list=ls())
setwd("C:/Users/yfan95/OneDrive - The University of Western Ontario/UWO/MRP/FireData/V2.0")
shiny::runApp("Web_App")
rm(list=ls())
setwd("/Users/fan/OneDrive - The University of Western Ontario/UWO/MRP/FireData/V2.0")
shiny::runApp("Web_App")
rm(list=ls())
setwd("/Users/fan/OneDrive - The University of Western Ontario/UWO/MRP/FireData/V2.0")
shiny::runApp("Web_App")
rm(list=ls())
setwd("/Users/fan/OneDrive - The University of Western Ontario/UWO/MRP/FireData/V2.0")
shiny::runApp("Web_App")
